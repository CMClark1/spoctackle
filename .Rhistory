#Cartier/Cabot to Needler/Templeman/Teleost/Venturer
cartier_teleost <- conversion_telcar |>
bind_rows(conversion_telcar,conversion_telcar,conversion_telcar) |>
mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
vesel=c(rep("N",nrow(conversion_telcar)),rep("T",nrow(conversion_telcar)),rep("J",nrow(conversion_telcar)),rep("B",nrow(conversion_telcar)))) |>
select(-cf_value_tel_to_car) |>
mutate(conversion=1/(cf_value_car_to_tel),
vesseleq="teleost")
#Join em up
joined_all <- rbind(teleost_cartier |> select(spec,flen,vesel,conversion,vesseleq),cartier_teleost |> select(spec,flen,vesel,conversion,vesseleq))
return(joined_all)
} else {
return(print("Season not summer, spring, or winter."))
}
}
test <-  tidy_conversions(username=oracle.username, password=oracle.password, dsn=oracle.dsn, localdir=localdir)
oracle.username
tidy_conversions(username=oracle.username, password=oracle.password, dsn=oracle.dsn, localdir=localdir)
localdi
localdir
tidy_conversions <- function(login=NULL, pw=NULL, dsn=NULL, species_list=10, season="SUMMER", localdir=NULL){
if(season==stringr::str_to_upper("summer")){
channel <- ROracle::dbConnect(DBI::dbDriver("Oracle"), username=login, password=pw, dsn)
gsconversions <- ROracle::dbGetQuery(channel, paste("select * from groundfish.gsconversions")) |> janitor::clean_names()
conversion <- gsconversions |>
filter(spec %in% species_list & season==season)
conversion_nedtel <- conversion |>
filter(from_vessel=="NED_TEM" & to_vessel == "TEL_VEN") |>
select(spec,flen,cf_value) %>%
dplyr::rename("cf_value_ned_to_tel"="cf_value")
conversion_telcar <- conversion |>
filter(from_vessel=="TEL_VEN" & to_vessel == "CAR_CAB") |>
select(spec,flen,cf_value) %>%
dplyr::rename("cf_value_tel_to_car"="cf_value")
conversion_atcham <- data.frame(spec=c(11,40,41,42,43),cf_value_atcham_to_ned=c(1.2,0.8,0.8,0.8,0.8))
#Needler equivalent
#ATC/Hammond to Needler
atcham_needler <- conversion_nedtel |>
bind_rows(conversion_nedtel) |>
mutate(vesel=c(rep("A",nrow(conversion_nedtel)),rep("H",nrow(conversion_nedtel)))) |>
select(-cf_value_ned_to_tel) |>
left_join(conversion_atcham, relationship="many-to-many")
#Teleost/Venturer to Needler
teleost_needler <- conversion_nedtel |>
bind_rows(conversion_nedtel) |>
mutate(cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=c(rep("S",nrow(conversion_nedtel)),rep("V",nrow(conversion_nedtel)))) |>
select(-cf_value_ned_to_tel)
#Cartier to Needler
cartier_needler <- conversion_telcar |>
left_join(conversion_nedtel) |>
bind_rows(conversion_telcar |> left_join(conversion_nedtel)) |>
mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=c(rep("J",nrow(conversion_telcar)),rep("B",nrow(conversion_telcar)))) |>
select(-cf_value_tel_to_car,-cf_value_ned_to_tel)
joined_needler <- plyr::join_all(list(atcham_needler,teleost_needler,cartier_needler), by=c("vesel","spec","flen"), type='full') %>%
replace(is.na(.), 1) |>
mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_tel_to_ned*cf_value_car_to_tel),
vesseleq="needler")
#Teleost equivalent
#ATC/Hammond to Needler to Teleost
atcham_teleost <- conversion_nedtel |>
bind_rows(conversion_nedtel) |>
mutate(vesel=c(rep("A",nrow(conversion_nedtel)),rep("H",nrow(conversion_nedtel)))) |>
left_join(conversion_atcham, relationship="many-to-many")
#Needler/Templeman to Teleost
needler_teleost <- conversion_nedtel |>
bind_rows(conversion_nedtel) |>
mutate(vesel=c(rep("N",nrow(conversion_nedtel)),rep("T",nrow(conversion_nedtel))))
#Cartier/Cabot to Teleost/Venturer
cartier_teleost <- conversion_telcar |>
bind_rows(conversion_telcar) |>
mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
vesel=c(rep("J",nrow(conversion_telcar)),rep("B",nrow(conversion_telcar)))) |>
select(-cf_value_tel_to_car)
joined_teleost <- plyr::join_all(list(atcham_teleost,needler_teleost,cartier_teleost), by=c("vesel","spec","flen"), type='full') %>%
replace(is.na(.), 1) |>
mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_ned_to_tel*cf_value_car_to_tel),
vesseleq="teleost")
#Cartier equivalent
#ATC/Hammond to Needler to Teleost to Cartier
atcham_cartier <- conversion_nedtel |>
left_join(conversion_telcar) |>
bind_rows(conversion_nedtel |>
left_join(conversion_telcar)) |>
mutate(vesel=c(rep("A",nrow(conversion_nedtel)),rep("H",nrow(conversion_nedtel)))) |>
left_join(conversion_atcham, relationship="many-to-many")
#Needler/Templeman to Teleost to Cartier
needler_cartier <- conversion_nedtel |>
left_join(conversion_telcar) |>
bind_rows(conversion_nedtel |>
left_join(conversion_telcar)) |>
mutate(vesel=c(rep("N",nrow(conversion_nedtel)),rep("T",nrow(conversion_nedtel))))
#Teleost/Venturer to Cartier
teleost_cartier <- conversion_telcar |>
bind_rows(conversion_telcar) |>
mutate(vesel=c(rep("S",nrow(conversion_telcar)),rep("V",nrow(conversion_telcar))))
joined_cartier <- plyr::join_all(list(atcham_cartier,needler_cartier,teleost_cartier), by=c("vesel","spec","flen"), type='full') %>%
replace(is.na(.), 1) |>
mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_ned_to_tel*cf_value_tel_to_car),
vesseleq="cartier")
joined_all <- rbind(joined_needler |> select(spec,flen,vesel,conversion,vesseleq),
joined_teleost |> select(spec,flen,vesel,conversion,vesseleq),
joined_cartier |> select(spec,flen,vesel,conversion,vesseleq))
return(joined_all)
} else if (season%in%str_to_upper("spring","winter")){
#Add spring conversions for cod and haddock - temporary until these are in the survey database
load(paste(localdir,"//result_conversion.RData",sep=""))
result_format <- result_conversion |>
dplyr::select(spec,lenseq,est_rho) |>
dplyr::rename("flen"=lenseq,"cf_value"=est_rho)
maxmins <- rbind(data.frame(spec=c(rep(10,12),rep(11,18)),flen=c(1:12,1:18)) |> mutate(cf_value=case_when(spec==10~0.220355888258648,spec==11~0.250406234496239)),
data.frame(spec=c(rep(10,169-93),rep(11,90-62)),flen=c(94:169,63:90)) |> mutate(cf_value=case_when(spec==10~1.284894,spec==11~1.695796)))
spring_conversions <- rbind(result_format,maxmins) |> dplyr::mutate(from_vessel="TEL_VEN",to_vessel="CAR_CAB",season="SPRING",cf_model_type="LDM",cf_metric="ABUNDANCE", cf_unit="CM")
conversion <- spring_conversions |>
filter(spec %in% species_list & season==season)
conversion_telcar <- conversion |>
filter(from_vessel=="TEL_VEN" & to_vessel == "CAR_CAB") |>
select(spec,flen,cf_value) %>%
dplyr::rename("cf_value_tel_to_car"="cf_value")
#Needler/Templeman/Teleost/Venturer to Cartier/Cabot
teleost_cartier <- conversion_telcar |>
bind_rows(conversion_telcar,conversion_telcar,conversion_telcar) |>
mutate(vesel=c(rep("N",nrow(conversion_telcar)),rep("T",nrow(conversion_telcar)),rep("S",nrow(conversion_telcar)),rep("V",nrow(conversion_telcar)))) |>
mutate(conversion=1/(cf_value_tel_to_car),
vesseleq="cartier")
#Cartier/Cabot to Needler/Templeman/Teleost/Venturer
cartier_teleost <- conversion_telcar |>
bind_rows(conversion_telcar,conversion_telcar,conversion_telcar) |>
mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
vesel=c(rep("N",nrow(conversion_telcar)),rep("T",nrow(conversion_telcar)),rep("J",nrow(conversion_telcar)),rep("B",nrow(conversion_telcar)))) |>
select(-cf_value_tel_to_car) |>
mutate(conversion=1/(cf_value_car_to_tel),
vesseleq="teleost")
#Join em up
joined_all <- rbind(teleost_cartier |> select(spec,flen,vesel,conversion,vesseleq),cartier_teleost |> select(spec,flen,vesel,conversion,vesseleq))
return(joined_all)
} else {
return(print("Season not summer, spring, or winter."))
}
}
tidy_conversions(login="clarkc", pw="dfq2twhr", dsn="PTRAN", localdir=localdir)
?data.frame
?bind_rows
?replace
?rep
?list
?nrow
?rbind
?return
?load
?paste
base::rep("N",nrow(conversion_telcar)),base::rep("T",nrow(conversion_telcar)),base::rep("S",nrow(conversion_telcar)),base::rep("V",nrow(conversion_telcar))
str(c(base::rep("N",nrow(conversion_telcar)),base::rep("T",nrow(conversion_telcar)),base::rep("S",nrow(conversion_telcar)),base::rep("V",nrow(conversion_telcar))))
c(base::rep("N",nrow(conversion_telcar)),base::rep("T",nrow(conversion_telcar)),base::rep("S",nrow(conversion_telcar)),base::rep("V",nrow(conversion_telcar)))
str(c(base::rep("N",nrow(conversion_telcar)),base::rep("T",nrow(conversion_telcar)),base::rep("S",nrow(conversion_telcar)),base::rep("V",nrow(conversion_telcar))))
rep(c("N","T","S","V"), each=nrow(conversion_telcar))
str(rep(c("N","T","S","V"), each=nrow(conversion_telcar)))
teleost_cartier <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar,conversion_telcar,conversion_telcar) |>
dplyr::mutate(vesel=rep(c("N","T","S","V"), each=nrow(conversion_telcar))) |>
dplyr::mutate(conversion=1/(cf_value_tel_to_car),
vesseleq="cartier")
teleost_cartier
str(teleost_cartier)
cartier_teleost <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar,conversion_telcar,conversion_telcar) |>
mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
vesel=base::rep(c("N","T","J","B"), each=base::nrow(conversion_telcar))) |>
select(-cf_value_tel_to_car) |>
mutate(conversion=1/(cf_value_car_to_tel),
vesseleq="teleost")
tidy_conversions <- function(login=NULL, pw=NULL, dsn=NULL, species_list=10, season="SUMMER", localdir=NULL){
if(season==stringr::str_to_upper("summer")){
channel <- ROracle::dbConnect(DBI::dbDriver("Oracle"), username=login, password=pw, dsn)
gsconversions <- ROracle::dbGetQuery(channel, paste("select * from groundfish.gsconversions")) |> janitor::clean_names()
conversion <- gsconversions |>
dplyr::filter(spec %in% species_list & season==season)
conversion_nedtel <- conversion |>
dplyr::filter(from_vessel=="NED_TEM" & to_vessel == "TEL_VEN") |>
dplyr::select(spec,flen,cf_value) %>%
dplyr::rename("cf_value_ned_to_tel"="cf_value")
conversion_telcar <- conversion |>
dplyr::filter(from_vessel=="TEL_VEN" & to_vessel == "CAR_CAB") |>
dplyr::select(spec,flen,cf_value) %>%
dplyr::rename("cf_value_tel_to_car"="cf_value")
conversion_atcham <- base::data.frame(spec=c(11,40,41,42,43),cf_value_atcham_to_ned=c(1.2,0.8,0.8,0.8,0.8))
#Needler equivalent
#ATC/Hammond to Needler
atcham_needler <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(vesel=c(base::rep("A",nrow(conversion_nedtel)),base::rep("H",nrow(conversion_nedtel)))) |>
dplyr::select(-cf_value_ned_to_tel) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
#Teleost/Venturer to Needler
teleost_needler <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=c(base::rep("S",base::nrow(conversion_nedtel)),base::rep("V",base::nrow(conversion_nedtel)))) |>
dplyr::select(-cf_value_ned_to_tel)
#Cartier to Needler
cartier_needler <- conversion_telcar |>
dplyr::left_join(conversion_nedtel) |>
dplyr::bind_rows(conversion_telcar |> dplyr::left_join(conversion_nedtel)) |>
dplyr::mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=c(base::rep("J",base::nrow(conversion_telcar)),base::rep("B",base::nrow(conversion_telcar)))) |>
dplyr::select(-cf_value_tel_to_car,-cf_value_ned_to_tel)
joined_needler <- plyr::join_all(base::list(atcham_needler,teleost_needler,cartier_needler), by=c("vesel","spec","flen"), type='full') %>%
base::replace(is.na(.), 1) |>
dplyr::mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_tel_to_ned*cf_value_car_to_tel),
vesseleq="needler")
#Teleost equivalent
#ATC/Hammond to Needler to Teleost
atcham_teleost <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(vesel=c(base::rep("A",base::nrow(conversion_nedtel)),base::rep("H",base::nrow(conversion_nedtel)))) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
#Needler/Templeman to Teleost
needler_teleost <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(vesel=c(base::rep("N",base::nrow(conversion_nedtel)),base::rep("T",nrow(conversion_nedtel))))
#Cartier/Cabot to Teleost/Venturer
cartier_teleost <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar) |>
dplyr::mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
vesel=c(base::rep("J",base::nrow(conversion_telcar)),base::rep("B",nrow(conversion_telcar)))) |>
dplyr::select(-cf_value_tel_to_car)
joined_teleost <- plyr::join_all(list(atcham_teleost,needler_teleost,cartier_teleost), by=c("vesel","spec","flen"), type='full') %>%
base::replace(is.na(.), 1) |>
dplyr::mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_ned_to_tel*cf_value_car_to_tel),
vesseleq="teleost")
#Cartier equivalent
#ATC/Hammond to Needler to Teleost to Cartier
atcham_cartier <- conversion_nedtel |>
dplyr::left_join(conversion_telcar) |>
dplyr::bind_rows(conversion_nedtel |>
dplyr::left_join(conversion_telcar)) |>
dplyr::mutate(vesel=c(base::rep("A",nrow(conversion_nedtel)),base::rep("H",base::nrow(conversion_nedtel)))) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
#Needler/Templeman to Teleost to Cartier
needler_cartier <- conversion_nedtel |>
dplyr::left_join(conversion_telcar) |>
dplyr::bind_rows(conversion_nedtel |>
dplyr::left_join(conversion_telcar)) |>
dplyr::mutate(vesel=c(base::rep("N",base::nrow(conversion_nedtel)),base::rep("T",nrow(conversion_nedtel))))
#Teleost/Venturer to Cartier
teleost_cartier <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar) |>
dplyr::mutate(vesel=c(base::rep("S",base::nrow(conversion_telcar)),base::rep("V",base::nrow(conversion_telcar))))
joined_cartier <- plyr::join_all(list(atcham_cartier,needler_cartier,teleost_cartier), by=c("vesel","spec","flen"), type='full') %>%
base::replace(is.na(.), 1) |>
dplyr::mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_ned_to_tel*cf_value_tel_to_car),
vesseleq="cartier")
joined_all <- base::rbind(joined_needler |> dplyr::select(spec,flen,vesel,conversion,vesseleq),
joined_teleost |> dplyr::select(spec,flen,vesel,conversion,vesseleq),
joined_cartier |> dplyr::select(spec,flen,vesel,conversion,vesseleq))
base::return(joined_all)
} else if (season%in%stringr::str_to_upper("spring","winter")){
#Add spring conversions for cod and haddock - temporary until these are in the survey database
base::load(base::paste(localdir,"//result_conversion.RData",sep=""))
result_format <- result_conversion |>
dplyr::select(spec,lenseq,est_rho) |>
dplyr::rename("flen"=lenseq,"cf_value"=est_rho)
maxmins <- base::rbind(base::data.frame(spec=c(base::rep(10,12),base::rep(11,18)),flen=c(1:12,1:18)) |> dplyr::mutate(cf_value=dplyr::case_when(spec==10~0.220355888258648,spec==11~0.250406234496239)),
base::data.frame(spec=c(base::rep(10,169-93),base::rep(11,90-62)),flen=c(94:169,63:90)) |> dplyr::mutate(cf_value=case_when(spec==10~1.284894,spec==11~1.695796)))
spring_conversions <- base::rbind(result_format,maxmins) |> dplyr::mutate(from_vessel="TEL_VEN",to_vessel="CAR_CAB",season="SPRING",cf_model_type="LDM",cf_metric="ABUNDANCE", cf_unit="CM")
conversion <- spring_conversions |>
dplyr::filter(spec %in% species_list & season==season)
conversion_telcar <- conversion |>
dplyr::filter(from_vessel=="TEL_VEN" & to_vessel == "CAR_CAB") |>
dplyr::select(spec,flen,cf_value) %>%
dplyr::rename("cf_value_tel_to_car"="cf_value")
#Needler/Templeman/Teleost/Venturer to Cartier/Cabot
teleost_cartier <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar,conversion_telcar,conversion_telcar) |>
dplyr::mutate(vesel=base::rep(c("N","T","S","V"), each=base::nrow(conversion_telcar))) |>
dplyr::mutate(conversion=1/(cf_value_tel_to_car),
vesseleq="cartier")
#Cartier/Cabot to Needler/Templeman/Teleost/Venturer
cartier_teleost <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar,conversion_telcar,conversion_telcar) |>
dplyr::mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
vesel=base::rep(c("N","T","J","B"), each=base::nrow(conversion_telcar))) |>
dplyr::select(-cf_value_tel_to_car) |>
dplyr::mutate(conversion=1/(cf_value_car_to_tel),
vesseleq="teleost")
#Join em up
joined_all <- base::rbind(teleost_cartier |> dplyr::select(spec,flen,vesel,conversion,vesseleq),cartier_teleost |> dplyr::select(spec,flen,vesel,conversion,vesseleq))
base::return(joined_all)
} else {
base::return(print("Season not summer, spring, or winter."))
}
}
tidy_conversions(login="clarkc",pw="dfq2twhr",dsn="PTRAN",localdir=localdir)
atcham_needler <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel))) |>
dplyr::select(-cf_value_ned_to_tel) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
head(atcham_needler)
atcham_needler <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
# dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel))
c(base::rep("A",nrow(conversion_nedtel)),base::rep("H",nrow(conversion_nedtel)))) |>
atcham_needler <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
# dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel))
dplyr::mutate(vesel=c(base::rep("A",nrow(conversion_nedtel)),base::rep("H",nrow(conversion_nedtel)))) |>
dplyr::select(-cf_value_ned_to_tel) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
head(atcham_needler)
atcham_needler <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel))) |>
dplyr::select(-cf_value_ned_to_tel) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
head(atcham_needler)
#Cartier to Needler
cartier_needler <- conversion_telcar |>
dplyr::left_join(conversion_nedtel) |>
dplyr::bind_rows(conversion_telcar |> dplyr::left_join(conversion_nedtel)) |>
dplyr::mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=base::rep(c("J","B"),each=base::nrow(conversion_nedtel))) |>
dplyr::select(-cf_value_tel_to_car,-cf_value_ned_to_tel)
#Cartier to Needler
cartier_needler <- conversion_telcar |>
dplyr::left_join(conversion_nedtel) |>
dplyr::bind_rows(conversion_telcar |> dplyr::left_join(conversion_nedtel)) |>
dplyr::mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=base::rep(c("J","B"),each=base::nrow(conversion_telcar))) |>
dplyr::select(-cf_value_tel_to_car,-cf_value_ned_to_tel)
head(cartier_needler)
#Teleost/Venturer to Needler
teleost_needler <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=base::rep(c("S","V"),each=base::nrow(conversion_nedtel))) |>
dplyr::select(-cf_value_ned_to_tel)
#Cartier to Needler
cartier_needler <- conversion_telcar |>
dplyr::left_join(conversion_nedtel) |>
dplyr::bind_rows(conversion_telcar |> dplyr::left_join(conversion_nedtel)) |>
dplyr::mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
cf_value_tel_to_ned=1/cf_value_ned_to_tel,
vesel=base::rep(c("J","B"),each=base::nrow(conversion_telcar))) |>
dplyr::select(-cf_value_tel_to_car,-cf_value_ned_to_tel)
joined_needler <- plyr::join_all(base::list(atcham_needler,teleost_needler,cartier_needler), by=c("vesel","spec","flen"), type='full') %>%
base::replace(is.na(.), 1) |>
dplyr::mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_tel_to_ned*cf_value_car_to_tel),
vesseleq="needler")
head(joined_needler)
atcham_teleost <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel))) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
#Needler/Templeman to Teleost
needler_teleost <- conversion_nedtel |>
dplyr::bind_rows(conversion_nedtel) |>
dplyr::mutate(vesel=base::rep(c("N","T"),each=base::nrow(conversion_nedtel)))
#Cartier/Cabot to Teleost/Venturer
cartier_teleost <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar) |>
dplyr::mutate(cf_value_car_to_tel=1/cf_value_tel_to_car,
vesel=base::rep(c("J","B"),each=base::nrow(conversion_telcar))) |>
dplyr::select(-cf_value_tel_to_car)
joined_teleost <- plyr::join_all(list(atcham_teleost,needler_teleost,cartier_teleost), by=c("vesel","spec","flen"), type='full') %>%
base::replace(is.na(.), 1) |>
dplyr::mutate(conversion=1/(cf_value_atcham_to_ned*cf_value_ned_to_tel*cf_value_car_to_tel),
vesseleq="teleost")
head(joined_teleost)
atcham_cartier <- conversion_nedtel |>
dplyr::left_join(conversion_telcar) |>
dplyr::bind_rows(conversion_nedtel |>
dplyr::left_join(conversion_telcar)) |>
dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel)))
#Needler/Templeman to Teleost to Cartier
needler_cartier <- conversion_nedtel |>
dplyr::left_join(conversion_telcar) |>
dplyr::bind_rows(conversion_nedtel |>
dplyr::left_join(conversion_telcar)) |>
dplyr::mutate(vesel=base::rep(c("N","T"),each=base::nrow(conversion_nedtel)))
#Teleost/Venturer to Cartier
teleost_cartier <- conversion_telcar |>
dplyr::bind_rows(conversion_telcar) |>
dplyr::mutate(vesel=base::rep(c("S","V"),each=base::nrow(conversion_telcar)))
head(atcham_cartier)
atcham_cartier <- conversion_nedtel |>
dplyr::left_join(conversion_telcar) |>
dplyr::bind_rows(conversion_nedtel |>
dplyr::left_join(conversion_telcar)) |>
dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel)))
head(atcham_cartier)
head(conversion_atcham)
atcham_cartier <- conversion_nedtel |>
dplyr::left_join(conversion_telcar) |>
dplyr::bind_rows(conversion_nedtel |>
dplyr::left_join(conversion_telcar)) |>
dplyr::mutate(vesel=base::rep(c("A","H"),each=base::nrow(conversion_nedtel))) |>
dplyr::left_join(conversion_atcham, relationship="many-to-many")
head(atcham_cartier)
load_all()
calc_weight_ab <- function(data = NULL, ab_source = NULL) {
if (ab_source == "survey") {
ab_file <- spoctackle::survey_ab
data$SEASON <- base::tolower(data$SEASON)
sex_stratified <- data |>
janitor::clean_names() |>
dplyr::rename("code" = "spec", "sex" = "fsex") |>
dplyr::filter(code %in% c(14,220,2550,2511,2513,2521,2523,2526,2527,2532)) |>
dplyr::left_join(ab_file, by = c("sex", "code", "season")) |>
dplyr::mutate(
weight_ab = length_weight_a * (flen^length_weight_b),
sex_stratified_ab = TRUE
) |>
dplyr::select(-n, -length_weight_a, -length_weight_b, -max_length, -length_units, -r, -common_name) |>
dplyr::rename("spec" = "code", "fsex" = "sex")
sex_unstratified <- data |>
janitor::clean_names() |>
dplyr::rename("code" = "spec", "sex" = "fsex") |>
dplyr::filter(!code %in% c(14,220,2550,2511,2513,2521,2523,2526,2527,2532)) |>
dplyr::left_join(ab_file, by = c("code", "season")) |>
dplyr::mutate(
weight_ab = ifelse(is.na(fwt),length_weight_a * (flen^length_weight_b),fwt),
sex_stratified_ab = FALSE
) |>
dplyr::select(-n, -length_weight_a, -length_weight_b, -max_length, -length_units, -r, -common_name, -sex.y) %>%
dplyr::rename("spec" = "code", "fsex" = "sex.x")
all_weights <- dplyr::full_join(sex_stratified, sex_unstratified)
base::print(all_weights)
} else {
ab_file <- spoctackle::commercial_ab
cod4X <- detail_combined |>
janitor::clean_names() |>
dplyr::filter(spec == 10) %>%
dplyr::mutate(
month=lubridate::month(as.Date(sdate)),
quarter = dplyr::case_when(
month %in% 1:3 ~ 1,
month %in% 4:6 ~ 2,
month %in% 7:9 ~ 3,
month %in% 10:12 ~ 4
)) %>%
dplyr::left_join(ab_file, by = c("quarter")) |>
dplyr::mutate(
weight_ab = ifelse(is.na(fwt),length_weight_a * (flen^length_weight_b),fwt),
sex_stratified_ab = FALSE
) |>
dplyr::select(-stock,-sex,-length_weight_a,-length_weight_b,-code)
base::print(cod4X)
}
}
use_r(ROracle)
use_package(ROracle)
use_package("ROracle")
use_package("janitor")
use_package("Mar.datawrangling")
use_package("fs")
use-package("plyr")
use_package("plyr")
use_package("dplyr")
use_package("stringr")
tidy_conversions(login=oracle.username,pw=oracle.password,dsn=oracle.dsn,species_list=species,season=season_select)
season_select
season_select==stringr::str_to_upper("summer")
load_all()
load_all()
rm(calc_weight_ab)
load_all()
tidy_conversions(login=oracle.username,pw=oracle.password,dsn=oracle.dsn,species_list=species,season=season_select)
season_select
season_select
stringr::str_to_upper(season_select)
stringr::str_to_upper("summer")
stringr::str_to_upper(season)==stringr::str_to_upper("summer")
stringr::str_to_upper(season_select)==stringr::str_to_upper("summer")
stringr::str_to_upper(season)==stringr::str_to_upper("summer")
rm(list=ls())
load_all()
?tidy_conversions
document()
?tidy_conversions
species=10
season_select="summer"
tidy_conversions(login=oracle.username,pw=oracle.password,dsn=oracle.dsn,species_list=species,season=season_select,localdir="C:\\LocalDataDump\\GROUNDFISH\\")
tidy_conversions(login=oracle.username,pw=oracle.password,dsn=oracle.dsn,species_list=species,season=season_select,localdir="C:\\LocalDataDump\\GROUNDFISH\\") |>
dplyr::filter(vesseleq=stringr::str_to_lower(equivalent))
tidy_conversions(login=oracle.username,pw=oracle.password,dsn=oracle.dsn,species_list=species,season=season_select,localdir="C:\\LocalDataDump\\GROUNDFISH\\") |>
dplyr::filter(vesseleq==stringr::str_to_lower(equivalent))
species=10
season_select="summer"
stratum=c(470:478,480:485,490:495)
year_start=2024
year_end=2024
type=1
equivalent="teleost"
ab="4Xcod"
localdir="C:\\LocalDataDump\\GROUNDFISH"
tidy_conversions(login=oracle.username,pw=oracle.password,dsn=oracle.dsn,species_list=species,season=season_select,localdir="C:\\LocalDataDump\\GROUNDFISH\\") |>
dplyr::filter(vesseleq==stringr::str_to_lower(equivalent))
#This pulls in the tidied conversion factors for the required species, season, and vessel equivalent
joined <- conversions <- spoctackle::tidy_conversions(login=oracle.username,pw=oracle.password,dsn=oracle.dsn,species_list=species,season=season_select,localdir="C:\\LocalDataDump\\GROUNDFISH\\") |>
dplyr::filter(vesseleq==stringr::str_to_lower(equivalent))
install.github("CMClark1/spoctackle")
devtools::install.github("CMClark1/spoctackle")
devtools::install.git("CMClark1/spoctackle")
devtools::install_github("CMClark1/spoctackle")
remove.packages("spoctackle")
devtools::install_github("CMClark1/spoctackle")
